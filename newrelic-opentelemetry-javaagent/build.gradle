plugins {
  id("maven-publish")
  id("signing")
  id("com.github.johnrengelman.shadow") version "6.0.0"
  id("com.github.sherter.google-java-format") version "0.9"
}

configurations {
  customShadow
}

dependencies {
  customShadow project(path: ":custom", configuration: "shadow")
  implementation "io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}:all"
}

tasks {
  processResources {
    dependsOn(configurations.customShadow)
    with copySpec {
      from(zipTree(configurations.customShadow.files.first())) {
        into("inst")
        rename("(^.*)\\.class\$", "\$1.classdata")
      }
    }
  }

  jar {
    enabled = false
  }

  shadowJar {
    mergeServiceFiles {
      include("inst/META-INF/services/*")
    }
    exclude("**/module-info.class")
    manifest {
      attributes.put("Main-Class", "io.opentelemetry.javaagent.OpenTelemetryAgent")
      attributes.put("Agent-Class", "com.newrelic.telemetry.NewRelicAgent")
      attributes.put("Premain-Class", "com.newrelic.telemetry.NewRelicAgent")
      attributes.put("Can-Redefine-Classes", "true")
      attributes.put("Can-Retransform-Classes", "true")
      attributes.put("Implementation-Vendor", "New Relic, Inc.")
      attributes.put("Implementation-Version", "newrelic-opentelemetry-integration-${project.version}-otel-${versions.opentelemetryJavaagent}")
    }
  }
  assemble {
    dependsOn(shadowJar)
  }
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)
      pom {
        System.out.println project.group
        groupId = project.group
        name = project.name
        description = 'A bundle of the OpenTelemetry Java Agent and the New Relic Exporter'
        url = 'https://github.com/newrelic/newrelic-opentelemetry-integration-java'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution = 'repo'
          }
        }
        developers {
          developer {
            id = 'newrelic'
            name = 'New Relic'
            email = 'opensource@newrelic.com'
          }
        }
        scm {
          connection = 'scm:git@github.com:newrelic/newrelic-opentelemetry-integration-java.git'
          url = 'git@github.com:newrelic/newrelic-opentelemetry-integration-java.git'
        }
      }
    }
  }
  repositories {
    maven {
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = project.version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

      credentials {
        username = System.getenv("SONATYPE_USERNAME")
        password = System.getenv("SONATYPE_PASSWORD")
      }
    }
  }
}

signing {
  def signingKey = findProperty("signingKey")
  def signingPassword = findProperty("signingPassword")
  useInMemoryPgpKeys(signingKey, signingPassword)
  sign publishing.publications.shadow
}
