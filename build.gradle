allprojects {
    group = "com.newrelic.telemetry"
    def isRelease = project.hasProperty("release") && "true" == release
    version project.findProperty("baseVersion") + (isRelease ? "" : "-SNAPSHOT")
}

subprojects {
    apply plugin: "java"
    apply plugin: "checkstyle"

    ext {
        versions = [
                opentelemetryExportersNewRelic : "0.10.0",
                opentelemetryJavaagent         : "0.10.1"
        ]
    }

    repositories {
        jcenter()
        maven {
            url = uri("https://oss.sonatype.org/content/repositories/snapshots")
        }
        maven {
            url = uri("https://oss.jfrog.org/artifactory/oss-snapshot-local")
        }
        mavenCentral()
    }

    checkstyle {
        configFile = rootProject.file('checkstyle.xml') as File
        configProperties = [
            'licenseHeader': rootProject.file('license_header.txt')
        ]
    }

    dependencies {
        testImplementation("org.mockito:mockito-core:3.3.3")
        testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    }

    tasks.withType(JavaCompile).configureEach {
        javaCompiler = javaToolchains.compilerFor {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    test {
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(11)
        }
    }

    tasks {
        test {
            useJUnitPlatform()
        }
    }
}
